{
  "version": 3,
  "sources": ["../../../../../../app/routes/demo/dashboard/optimizer/solution.jsx"],
  "sourcesContent": ["import { React, Fragment, useState } from \"react\";\r\nimport { Dialog, Transition, RadioGroup } from \"@headlessui/react\";\r\n\r\nimport { PlusIcon } from \"@heroicons/react/20/solid\";\r\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nconst tabs = [\r\n  { name: \"Scenarios 1\", href: \"#\", current: true },\r\n  { name: \"Scenarios 2\", href: \"#\", current: false },\r\n];\r\n\r\nconst plans = [\r\n  { name: \"Optimization completed\", description: \"1:51:32 PM - 2/23/2021\" },\r\n  {\r\n    name: \"Scenario modified\",\r\n    description: \"1:21:17 PM - 6/6/2023\",\r\n  },\r\n  {\r\n    name: \"Solve status\",\r\n    description: \"OPTIMAL\",\r\n  },\r\n  {\r\n    name: \"CS Job ID\",\r\n    description: \"eeeb3265-3cf4-44f4-944d-ea7dad4c12ed\",\r\n  },\r\n];\r\n\r\nconst order = [\r\n  {\r\n    width: \"50\",\r\n    quantity: \"12\",\r\n  },\r\n  {\r\n    width: \"100\",\r\n    quantity: \"1\",\r\n  },\r\n];\r\n\r\nexport default function SolutionRoute() {\r\n  const [open, setOpen] = useState(false);\r\n  const [selected, setSelected] = useState(plans[0]);\r\n  return (\r\n    <>\r\n      <div className=\"w-full bg-sky-500\">\r\n        <div className=\"ml-4 flex h-16 items-center justify-start\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"hidden md:block\">\r\n              <div className=\"text-3xl font-bold text-white\">\r\n                Optimizer Solution\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"mx-4\">\r\n        <div className=\"my-4 rounded-lg border bg-white shadow-sm md:flex md:items-center md:justify-between\">\r\n          <div className=\" border-b border-gray-200 \">\r\n            <div className=\"p-2 sm:flex sm:items-baseline\">\r\n              <h3 className=\"text-base font-semibold leading-6 text-gray-900 \">\r\n                Scenarios\r\n              </h3>\r\n              <div className=\"mt-4 border-l sm:ml-2 sm:mt-0\">\r\n                <nav className=\"-mb-px ml-4 flex space-x-8\">\r\n                  {tabs.map((tab) => (\r\n                    <a\r\n                      key={tab.name}\r\n                      href={tab.href}\r\n                      className={classNames(\r\n                        tab.current\r\n                          ? \"border-rose-500 text-rose-500\"\r\n                          : \"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700\",\r\n                        \"whitespace-nowrap border-b-2 px-1 pb-2 text-sm font-medium\"\r\n                      )}\r\n                      aria-current={tab.current ? \"page\" : undefined}\r\n                    >\r\n                      {tab.name}\r\n                    </a>\r\n                  ))}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mr-2 flex\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"rounded-full bg-rose-500 p-2 text-white shadow-sm hover:bg-rose-600\"\r\n              onClick={() => setOpen(!open)}>\r\n              <PlusIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* charts */}\r\n        <div role=\"list\" className=\" grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n          <div className=\"col-span-1 flex flex-col divide-y divide-white rounded-lg bg-white shadow-xl shadow-slate-900/10\">\r\n            <div className=\"relative flex flex-1 flex-col p-2\">\r\n              <h3 className=\"mt-2 text-base font-medium text-gray-900\">\r\n                Cutting Operations\r\n              </h3>\r\n\r\n              <div className=\"m-2 rounded-lg border p-2\">\r\n                <div className=\"my-2 space-y-2\">\r\n                  {plans.map((plan) => (\r\n\r\n                    <div key={plan} className=\"relative block cursor-pointer rounded-lg border px-6 py-3 shadow-sm sm:flex sm:justify-between\">\r\n                      <span className=\"flex flex-col text-sm font-semibold text-gray-900\">\r\n                        {plan.name}\r\n\r\n                        <p className=\"block text-gray-500 sm:inline\">\r\n                          {plan.description}\r\n                        </p>\r\n                      </span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <div className=\"flex justify-center p-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-md rounded-md border bg-indigo-500 px-5 py-2 font-semibold text-white shadow-sm hover:bg-indigo-600\"\r\n                    onClick={() => setOpen(false)}\r\n                  >\r\n                    LOG\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"text-md ml-2 inline-flex justify-center rounded-md bg-rose-500 px-3 py-2 font-semibold text-white shadow-sm hover:bg-rose-600 \"\r\n                  >\r\n                    OPTIMIZE\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-span-1 flex flex-col divide-y divide-white rounded-lg bg-white shadow-xl shadow-slate-900/10\">\r\n            <div className=\"relative flex flex-1 flex-col p-2\">\r\n              <h3 className=\"mx-2 mt-2 text-base font-medium text-gray-900\">\r\n                Buing Order\r\n              </h3>\r\n              <div className=\"m-2 rounded-lg border p-2\">\r\n                <div className=\"items-center overflow-x-auto align-middle\">\r\n                  <table className=\"mx-auto min-w-full divide-y divide-gray-300\">\r\n                    <thead>\r\n                      <tr className=\"bg-gray-100\">\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"px-2 py-3.5 text-center text-sm  font-semibold text-gray-700 ring-gray-500/10\"\r\n                        >\r\n                          Roll Width\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"px-2 py-3.5 text-center text-sm  font-semibold text-gray-700 ring-gray-500/10\"\r\n                        >\r\n                          Quantity\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody className=\"bg-white\">\r\n                      {order.map((order) => (\r\n                        <tr key={order} className=\"mx-2 even:bg-gray-100\">\r\n                          <td className=\"whitespace-nowrap p-4 text-center text-sm\">\r\n                            {order.width}\r\n                          </td>\r\n                          <td className=\"whitespace-nowrap p-4 text-center text-sm\">\r\n                            {order.quantity}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-10\" onClose={setOpen}>\r\n          <div className=\"fixed inset-0\" />\r\n\r\n          <div className=\"fixed inset-0 overflow-hidden\">\r\n            <div className=\"absolute inset-0 overflow-hidden\">\r\n              <div className=\"pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10\">\r\n                <Transition.Child\r\n                  as={Fragment}\r\n                  enter=\"transform transition ease-in-out duration-500 sm:duration-700\"\r\n                  enterFrom=\"translate-x-full\"\r\n                  enterTo=\"translate-x-0\"\r\n                  leave=\"transform transition ease-in-out duration-500 sm:duration-700\"\r\n                  leaveFrom=\"translate-x-0\"\r\n                  leaveTo=\"translate-x-full\"\r\n                >\r\n                  <Dialog.Panel className=\"pointer-events-auto w-screen max-w-md\">\r\n                    <div className=\"flex h-full flex-col divide-y divide-gray-200 bg-white shadow-xl\">\r\n                      <div className=\"h-0 flex-1 overflow-y-auto\">\r\n                        <div className=\"bg-blue-900 px-4 py-4\">\r\n                          <div className=\"flex items-start justify-between\">\r\n                            <Dialog.Title className=\"py-1 text-base font-semibold leading-6 text-white\">\r\n                              Create Scenario\r\n                            </Dialog.Title>\r\n\r\n                            <div className=\"ml-3 flex h-7 items-center\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"rounded-md  text-slate-300 hover:text-white\"\r\n                                onClick={() => setOpen(false)}\r\n                              >\r\n                                <span className=\"sr-only\">Close panel</span>\r\n                                <XMarkIcon\r\n                                  className=\"h-6 w-6\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"px-4 py-2\">\r\n                          <span className=\"text-md block font-medium leading-6 text-gray-900\">\r\n                            Name\r\n                          </span>\r\n                          <div className=\"mt-2\">\r\n                            <div className=\"block w-full rounded-md p-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300\">\r\n                              <p>Blank1</p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"px-4 py-2\">\r\n                          <span className=\"text-md block font-medium leading-6 text-gray-900\">\r\n                            Description\r\n                          </span>\r\n                          <div className=\"mt-2\">\r\n                            <div className=\"block w-full rounded-md p-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300\">\r\n                              <p>Blank scenario with default settings</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"mb-2 border-b p-2\"></div>\r\n                        </div>\r\n\r\n                        <div className=\"px-4 py-2\">\r\n                          <RadioGroup value={selected} onChange={setSelected}>\r\n                            <RadioGroup.Label className=\"text-md block font-medium leading-6 text-gray-900\">\r\n                              Select a type of scenario\r\n                            </RadioGroup.Label>\r\n                            <div className=\"mt-2 space-y-4\">\r\n                              {plans.map((plan) => (\r\n                                <RadioGroup.Option\r\n                                  key={plan.name}\r\n                                  value={plan}\r\n                                  className={({ checked, active }) =>\r\n                                    classNames(\r\n                                      checked\r\n                                        ? \"border-transparent\"\r\n                                        : \"border-gray-300\",\r\n                                      active\r\n                                        ? \"\"\r\n                                        : \"\",\r\n                                      \"relative block cursor-pointer rounded-lg border bg-white px-6 py-4 shadow-sm focus:outline-none sm:flex sm:justify-between\"\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  {({ active, checked }) => (\r\n                                    <>\r\n                                      <span className=\"flex items-center\">\r\n                                        <span className=\"flex flex-col text-sm\">\r\n                                          <RadioGroup.Label\r\n                                            as=\"span\"\r\n                                            className=\"font-medium text-gray-900\"\r\n                                          >\r\n                                            {plan.name}\r\n                                          </RadioGroup.Label>\r\n                                          <RadioGroup.Description\r\n                                            as=\"span\"\r\n                                            className=\"text-gray-500\"\r\n                                          >\r\n                                            <span className=\"block sm:inline\">\r\n                                              {plan.description}\r\n                                            </span>{\" \"}\r\n                                          </RadioGroup.Description>\r\n                                        </span>\r\n                                      </span>\r\n\r\n                                      <span\r\n                                        className={classNames(\r\n                                          active ? \"border\" : \"border-2\",\r\n                                          checked\r\n                                            ? \"border-rose-500\"\r\n                                            : \"border-transparent\",\r\n                                          \"pointer-events-none absolute -inset-px rounded-lg\"\r\n                                        )}\r\n                                        aria-hidden=\"true\"\r\n                                      />\r\n                                    </>\r\n                                  )}\r\n                                </RadioGroup.Option>\r\n                              ))}\r\n                            </div>\r\n                          </RadioGroup>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex justify-center p-2\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"text-md rounded-md border bg-indigo-500 px-3 py-2 font-semibold text-white hover:bg-indigo-600 shadow-sm\"\r\n                          onClick={() => setOpen(false)}\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"text-md ml-2 inline-flex justify-center rounded-md bg-rose-500 px-3 py-2 font-semibold text-white shadow-sm hover:bg-rose-600\"\r\n                        >\r\n                          Create\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </Dialog.Panel>\r\n                </Transition.Child>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n    </>\r\n  );\r\n}\r\n"],
  "mappings": "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",
  "names": ["order"]
}
